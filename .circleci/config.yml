version: 2.1
jobs:
 build:
   docker:
     - image: ubuntu:18.04
   steps:
     - checkout
     - run:
         name: packages dependencies
         command: |
           apt-get update -yqq
           apt-get install -y curl wget git p7zip jq unzip
           apt-get install -y clang-7 make libmariadbclient-dev mariadb-server mariadb-client openssl libssl-dev zlib1g-dev libtool libncurses5-dev patch build-essential git libreadline-dev libbz2-1.0 libbz2-dev libboost-dev libboost-thread-dev libboost-system-dev libboost-filesystem-dev libboost-program-options-dev libboost-regex-dev libboost-iostreams-dev
           apt-get remove cmake
           mkdir /opt/cmake
           wget https://cmake.org/files/v3.11/cmake-3.11.4-Linux-x86_64.sh
           sh cmake-3.11.4-Linux-x86_64.sh --prefix=/opt/cmake --skip-license 
     - run:
         name: folder structure & pre extracted data
         command: |
           cd ~
           mkdir bin logs data build
           cd ~/data
           wget https://blob.allumeciga.re/2019_01_22_data.7z
           7zr x 2019_01_22_data.7z -y > /dev/null
           rm 2019_01_22_data.7z          
     - run:
         name: database
         command: |
           cd ~/bin
           ASSET_ID=`curl -H "Authorization: token ${CI_ACCESS_TOKEN}" https://api.github.com/repos/kelno/sunstrider-core/releases/latest | jq -r '.assets[0].id'`
           curl -vLJO -H 'Accept: application/octet-stream' "https://api.github.com/repos/kelno/sunstrider-core/releases/assets/${ASSET_ID}?access_token=${CI_ACCESS_TOKEN}"
           ls
           unzip *.zip
           rm *.zip
           service mysql start
           mysql < ~/project/sql/create/create_mysql.sql
     - run:
         name: cmake
         command: |
           cd ~
           pwd=`pwd`
           pwd
           cd build
           git config user.email "circleci@build.bot" && git config user.name "CircleCI"
           export CXX=/usr/bin/clang++-7
           export CC=/usr/bin/clang-7
           $CXX --version
           /opt/cmake/bin/cmake ../project -DWARNINGS=1 -DPLAYERBOT=1 -DTOOLS=1 -DSCRIPTS=static -DTESTS=1 -DCMAKE_BUILD_TYPE=Release -DDO_DEBUG=1 -DCMAKE_INSTALL_PREFIX=${pwd}
     - run:
         name: build
         command: |
           cd ~/build
           make -j 10 -k && make install && make clean
           cd ~
           ls -l bin
           ls -l etc
           cd ~/etc
           sed -e 's!^DataDir\s*=.*!DataDir = "../data/"!g;' -e 's!^LogsDir\s*=.*!LogsDir = "../logs/"!g;'  -e 's!^Testing.MaxParallel\s*=.*!Testing.MaxParallel = 1000!g;' -e 's!^Logger.scripts.ai\s*=.*!Logger.scripts.ai=6,Console Server!g;' < "worldserver.conf.dist" > "worldserver.conf"
     - run:
         name: tests
         command: |
           cd ~/bin
           ./authserver --version
           ./worldserver --version
           ulimit -c
           ulimit -a -S
           ulimit -a -H
           ulimit -c unlimited -S
           echo 'Core pattern:'
           cat /proc/sys/kernel/core_pattern
           ./worldserver --tests
           ls -l
           for i in $(find ./ -maxdepth 1 -name 'core*' -print); do gdb worldserver core* -ex "thread apply all bt" -ex "set pagination 0" -batch; done;
           
